apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: @= project_name =@
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/auth-url: "http://auth-proxy.default.svc.cluster.local"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, HEAD"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://{{env_domain}},https://*.{{env_domain}}{% if env == 'staging' %},http://localhost.staging-platform.entwicklerheld.de:8000{% endif %}"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization, Content-Type, X-Requested-With"  
spec:
  tls:
  - hosts:
    - @= project_name =@.{{env_domain}}
    secretName: wildcard-tls
  rules:
  - host: @= project_name =@.{{env_domain}}
    http:
      paths:
      - backend:
          service:
            name: @= project_name =@
            port: 
              number: 80
        path: /
        pathType: ImplementationSpecific
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: @= project_name =@-public
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/auth-url: "http://auth-proxy-allow-unauthorized.default.svc.cluster.local"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, HEAD"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://{{env_domain}},https://*.{{env_domain}}{% if env == 'staging' %},http://localhost.staging-platform.entwicklerheld.de:8000{% endif %}"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization, Content-Type, X-Requested-With"  
spec:
  tls:
  - hosts:
    - @= project_name =@.{{env_domain}}
    secretName: wildcard-tls
  rules:
  - host: @= project_name =@.{{env_domain}}
    http:
      paths:
      - backend:
          service:
            name: @= project_name =@
            port:
              number: 80
        path: /admin
        pathType: ImplementationSpecific
      - backend:
          service:
            name: @= project_name =@
            port: 
              number: 80
        path: /static
        pathType: ImplementationSpecific
      - backend:
          service:
            name: @= project_name =@
            port: 
              number: 80
        path: /media
        pathType: ImplementationSpecific
